#!/bin/bash
exec >uperf-client-stderrout.txt
exec 2>&1

echo "args: $@"
echo
if [ -z "$RS_CS_LABEL" ]; then
    echo "RS_CS_LABEL is not defined, exiting"
    exit 1
else
    echo "RS_CS_LABEL: $RS_CS_LABEL"
    echo
fi
echo "hostname: `hostname`"
echo
echo "pwd:"
/bin/pwd
echo
echo "ls -alR:"
/bin/ls -alR
echo
# defaults
nthreads=1
protocol=tcp
wsize=1024
rsize=1024
duration=60
remotehost=""
server_ifname="eth0"
test_type=stream

longopts="test-type:,protocol:,wsize:,nthreads:,remotehost:,duration:,server-ifname:"
opts=$(getopt -q -o "" --longoptions "$longopts" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
    printf -- "\tUnrecognized option specified\n\n"
    exit 1
fi
eval set -- "$opts";
while true; do
    case "$1" in
        --test-type)
            shift;
            test_type=$test_type
            echo "test_type=$test_type"
            if [ ! -e /tmp/xml-files/$test_type.xml ]; then
                echo "ERROR: could not find /tmp/xml-files/$test_type.xml"
                exit 1
            fi
            shift;
            ;;
        --nthreads)
            shift;
            nthreads=$1
            echo "nthreads=$nthreads"
            shift;
            ;;
        --protocol)
            shift;
            protocol=$1
            echo "protocol=$protocol"
            shift
            ;;
        --wsize)
            shift;
            wsize=$1
            echo "wsize=$wsize"
            shift
            ;;
        --remotehost)
            shift;
            remotehost=$1
            echo "remotehost=$remotehost"
            shift
            ;;
        --server-ifname)
            shift;
            server_ifname=$1
            echo "server_ifname=$server_ifname"
            shift
            ;;
        --duration)
            shift;
            duration=$1
            echo "duration=$duration"
            shift
            ;;
        --)
            shift;
            break
            ;;
        *)
            echo "Invalid optioni: $1"
            exit 1
    esac
done

if [ -z "$remotehost" ]; then
    echo "Remotehost was not set via cmdline args, checking any messages from server"
    if [ -e "msgs/rx/client-start:1" ]; then
        echo "Found msgs/rx/client-start:1"
        ipaddr=`jq -r '.iproute[] | select(.ifname == "'$server_ifname'") | .addr_info[] | select(.family == "inet") | .local' "msgs/rx/client-start:1"`
        if [ ! -z "$ipaddr" ]; then
            echo "Found server IP $ipaddr"
            remotehost=$ipaddr
        fi
    fi
fi

if [ -z "$remotehost" ]; then
    echo "remotehost is not set"
    exit 1
fi

test_xml="/tmp/xml-files/$test_type.xml"
if [ ! -e $test_xml ]; then
    echo "$test_xml not found"
    exit 1
fi

id=`echo $RS_CS_LABEL | awk -F- '{print $2}'`
re='^[1-9][0-9]*$'
if [[ ! "$id" =~ $re ]]; then
    echo "ID must a be a positive interger, exiting"
    exit 1
fi

let "port = 5 * $id"
let "port = $port + 20000"
/bin/cp /tmp/xml-files/$test_type.xml test.xml
nthreads=$nthreads protocol=$protocol remotehost=$remotehost duration=$duration \
    wsize=$wsize uperf -m test.xml -P $port
